[1mdiff --git a/backend/requirements.txt b/backend/requirements.txt[m
[1mindex 68a7438..71a7c95 100644[m
[1m--- a/backend/requirements.txt[m
[1m+++ b/backend/requirements.txt[m
[36m@@ -1,8 +1,9 @@[m
[31m-numpy==1.24.3[m
 fastapi==0.95.2[m
 uvicorn[standard]==0.22.0[m
 transformers==4.40.0[m
[31m-torch==2.2.0+cpu --find-links https://download.pytorch.org/whl/cpu[m
[32m+[m[32mtorch==2.2.0 --index-url https://download.pytorch.org/whl/cpu[m
 sentencepiece==0.1.99[m
 pydantic==1.10.11[m
 accelerate>=0.20.0[m
[32m+[m[32mrequests==2.31.0[m
[32m+[m[32mnumpy==1.24.0[m
[1mdiff --git a/docker-compose.yml b/docker-compose.yml[m
[1mindex ea9b976..4f39a0b 100644[m
[1m--- a/docker-compose.yml[m
[1m+++ b/docker-compose.yml[m
[36m@@ -1,7 +1,7 @@[m
 services:[m
   backend:[m
     build: ./backend[m
[31m-    container_name: webai_backend[m
[32m+[m[32m    container_name: backend[m
     ports:[m
       - "8000:8000"[m
     environment:[m
[36m@@ -12,7 +12,7 @@[m [mservices:[m
 [m
   frontend:[m
     build: ./frontend[m
[31m-    container_name: webai_frontend[m
[32m+[m[32m    container_name: frontend[m
     ports:[m
       - "5000:5000"[m
     environment:[m
[1mdiff --git a/frontend/Dockerfile b/frontend/Dockerfile[m
[1mindex e3a2223..a094a3f 100644[m
[1m--- a/frontend/Dockerfile[m
[1m+++ b/frontend/Dockerfile[m
[36m@@ -1,17 +1,23 @@[m
 FROM python:3.11-slim[m
 [m
[31m-RUN groupadd -g 1000 appuser && useradd -m -u 1000 -g appuser appuser[m
[32m+[m[32m# Install system dependencies[m
[32m+[m[32mRUN apt update && apt install -y curl && rm -rf /var/lib/apt/lists/*[m
[32m+[m
[32m+[m[32m# Create user[m
[32m+[m[32mRUN useradd -m -u 1000 appuser[m
 [m
 WORKDIR /app[m
 [m
[32m+[m[32m# Copy requirements and install[m
 COPY requirements.txt .[m
 RUN pip install --no-cache-dir -r requirements.txt[m
 [m
[31m-# Copy app code with correct ownership[m
[32m+[m[32m# Copy app code[m
 COPY --chown=appuser:appuser . .[m
 [m
 USER appuser[m
 [m
 EXPOSE 5000[m
 [m
[31m-CMD ["gunicorn", "--bind", "0.0.0.0:5000", "app:app", "--workers", "2"][m
[32m+[m[32m# Use simpler command - remove workers for now[m
[32m+[m[32mCMD ["python", "-m", "gunicorn", "--bind", "0.0.0.0:5000", "app:app"][m
[1mdiff --git a/frontend/app.py b/frontend/app.py[m
[1mindex d6a33ec..c63c961 100644[m
[1m--- a/frontend/app.py[m
[1m+++ b/frontend/app.py[m
[36m@@ -3,7 +3,7 @@[m [mimport requests[m
 import os[m
 [m
 app = Flask(__name__)[m
[31m-BACKEND_URL = os.getenv('BACKEND_URL', 'http://backend:8000')[m
[32m+[m[32mBACKEND_URL = os.getenv('BACKEND_URL', 'http://localhost:8000')[m
 [m
 @app.route('/')[m
 def index():[m
[36m@@ -12,7 +12,9 @@[m [mdef index():[m
 @app.route('/analyze', methods=['POST'])[m
 def analyze():[m
     try:[m
[31m-        text = request.form.get('text', '').strip()[m
[32m+[m[32m        data = request.get_json()  # âœ… read JSON from frontend[m
[32m+[m[32m        text = (data.get('text') if data else '').strip()[m
[32m+[m[41m        [m
         if not text:[m
             return jsonify({'error': 'No text provided'}), 400[m
         [m
[36m@@ -44,4 +46,5 @@[m [mdef health():[m
     return jsonify({'status': 'healthy', 'service': 'frontend'})[m
 [m
 if __name__ == '__main__':[m
[31m-    app.run(host='0.0.0.0', port=5000, debug=False)[m
[32m+[m[32m    app.run(host='0.0.0.0', port=5000, debug=True)[m
[41m+[m
[1mdiff --git a/frontend/requirements.txt b/frontend/requirements.txt[m
[1mindex c2de92d..db16322 100644[m
[1m--- a/frontend/requirements.txt[m
[1m+++ b/frontend/requirements.txt[m
[36m@@ -1,2 +1,3 @@[m
 flask==2.3.3[m
 requests==2.31.0[m
[32m+[m[32mgunicorn==21.2.0[m
[1mdiff --git a/frontend/templates/index.html b/frontend/templates/index.html[m
[1mindex c121234..19dc042 100644[m
[1m--- a/frontend/templates/index.html[m
[1m+++ b/frontend/templates/index.html[m
[36m@@ -6,7 +6,7 @@[m
         body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }[m
         textarea { width: 100%; height: 100px; margin: 10px 0; }[m
         button { padding: 10px 20px; background: #007bff; color: white; border: none; cursor: pointer; }[m
[31m-        .result { margin-top: 20px; padding: 10px; border: 1px solid #ddd; }[m
[32m+[m[32m        .result { margin-top: 20px; padding: 10px; border: 1px solid #ddd; display: none; }[m
         .loading { display: none; color: #007bff; }[m
     </style>[m
 </head>[m
[36m@@ -20,7 +20,7 @@[m
     [m
     <div id="loading" class="loading">Analyzing... Please wait.</div>[m
     [m
[31m-    <div id="result" class="result" style="display: none;">[m
[32m+[m[32m    <div id="result" class="result">[m
         <h3>Result:</h3>[m
         <div id="resultContent"></div>[m
     </div>[m
[36m@@ -29,7 +29,8 @@[m
         document.getElementById('analysisForm').addEventListener('submit', async function(e) {[m
             e.preventDefault();[m
             [m
[31m-            const text = document.getElementById('textInput').value.trim();[m
[32m+[m[32m            const textInput = document.getElementById('textInput');[m
[32m+[m[32m            const text = textInput.value.trim();[m
             const resultDiv = document.getElementById('result');[m
             const loadingDiv = document.getElementById('loading');[m
             const resultContent = document.getElementById('resultContent');[m
[36m@@ -45,23 +46,22 @@[m
             }[m
             [m
             try {[m
[31m-                const formData = new FormData();[m
[31m-                formData.append('text', text);[m
[31m-                [m
                 const response = await fetch('/analyze', {[m
                     method: 'POST',[m
[31m-                    body: formData[m
[32m+[m[32m                    headers: { 'Content-Type': 'application/json' },[m
[32m+[m[32m                    body: JSON.stringify({ text })[m
                 });[m
                 [m
                 const data = await response.json();[m
                 [m
                 if (response.ok) {[m
                     showResult(data);[m
[32m+[m[32m                    textInput.value = ""; // âœ… Clear text after success[m
                 } else {[m
                     showError(data.error || 'An error occurred');[m
                 }[m
             } catch (err) {[m
[31m-                showError('Network error: ' + err.message);[m
[32m+[m[32m                showError('Cannot reach backend: ' + err.message);[m
             } finally {[m
                 loadingDiv.style.display = 'none';[m
             }[m
[36m@@ -71,10 +71,9 @@[m
             const resultDiv = document.getElementById('result');[m
             const resultContent = document.getElementById('resultContent');[m
             [m
[31m-            // Safely handle the response data[m
             const text = data.text || 'No text';[m
             const sentiment = data.sentiment || 'UNKNOWN';[m
[31m-            const confidence = data.confidence || 0;[m
[32m+[m[32m            const confidence = data.confidence !== undefined ? data.confidence : 0;[m
             [m
             resultContent.innerHTML = `[m
                 <p><strong>Text:</strong> "${text}"</p>[m
